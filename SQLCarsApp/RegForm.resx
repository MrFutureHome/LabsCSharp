<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>